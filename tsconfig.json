{
  "compilerOptions": {
    /* Basic Options */
    "target": "es2015" /* Specify ECMAScript target version: Modern browsers support ES2015+ */,
    "lib": [
      "dom" /* DOM APIs for browser environment */,
      "dom.iterable" /* DOM Iterable APIs */,
      "esnext" /* Latest ECMAScript features */
    ],
    "allowJs": true /* Allow JavaScript files to be compiled */,
    "skipLibCheck": true /* Skip type checking of all declaration files (*.d.ts) */,
    "esModuleInterop": true /* Enable interoperability between CommonJS and ES Modules */,
    "allowSyntheticDefaultImports": true /* Allow default imports from modules with no default export */,
    "forceConsistentCasingInFileNames": true /* Disallow inconsistently-cased references to the same file */,
    /* Module Resolution Options */
    "module": "esnext" /* Next.js uses ES modules */,
    "moduleResolution": "node" /* Node.js module resolution strategy */,
    "resolveJsonModule": true /* Allow importing .json files */,
    "isolatedModules": true /* Transpile each file as a separate module */,
    "jsx": "preserve" /* Preserve JSX for Next.js */,
    "incremental": true /* Enable incremental compilation */,
    /* Strict Type-Checking Options */
    "strict": true /* Enable all strict type-checking options */,
    "noImplicitAny": true /* Raise error on expressions and declarations with an implied 'any' type */,
    "strictNullChecks": true /* Enable strict null checks */,
    "strictFunctionTypes": true /* Enable strict checking of function types */,
    "strictBindCallApply": true /* Enable strict 'bind', 'call', and 'apply' methods on functions */,
    "strictPropertyInitialization": true /* Ensure non-undefined class properties are initialized in the constructor */,
    "noImplicitThis": true /* Raise error on 'this' expressions with an implied 'any' type */,
    "alwaysStrict": true /* Parse in strict mode and emit "use strict" for each source file */,
    /* Additional Checks */
    "noUnusedLocals": true /* Report errors on unused locals */,
    "noUnusedParameters": true /* Report errors on unused parameters */,
    "noImplicitReturns": true /* Report error when not all code paths in function return a value */,
    "noFallthroughCasesInSwitch": true /* Report errors for fallthrough cases in switch statement */,
    /* Path Aliases for Simplified Imports */
    "baseUrl": "." /* Base directory to resolve non-absolute module names */,
    "paths": {
      "@/*": [
        "./*"
      ] /* Root level imports */,
      "@/components/*": [
        "components/*"
      ] /* Components imports */,
      "@/pages/*": [
        "pages/*"
      ] /* Pages imports */,
      "@/styles/*": [
        "styles/*"
      ] /* Styles imports */,
      "@/utils/*": [
        "utils/*"
      ] /* Utilities imports */,
      "@/lib/*": [
        "lib/*"
      ] /* Library imports */,
      "@/hooks/*": [
        "hooks/*"
      ] /* Custom hooks imports */,
      "@/types/*": [
        "types/*"
      ] /* Type definitions imports */,
      "@/public/*": [
        "public/*"
      ] /* Public assets imports */
    },
    "noEmit": true,
    "plugins": [
      {
        "name": "next"
      }
    ]
  },
  "include": [
    "next-env.d.ts",
    "**/*.ts",
    "**/*.tsx",
    ".next/types/**/*.ts"
  ],
  "exclude": [
    "node_modules",
    ".next",
    "out",
    "public",
    "**/*.test.ts",
    "**/*.test.tsx",
    // Add these exclusions
    "*.config.js",
    "next.config.js",
    "jest.config.js",
    "postcss.config.js",
    "tailwind.config.js",
    "scripts/**/*.js"
  ]
}
